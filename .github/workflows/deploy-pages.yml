name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all history to find merged PRs

      - name: Get latest merged PR
        id: latest_pr
        uses: actions/github-script@v7
        with:
          script: |
            // Get recent commits on main branch
            const commits = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: 'main',
              per_page: 50
            });

            // Find first commit that has an associated merged PR
            for (const commit of commits.data) {
              const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: commit.sha
              });

              // Find merged PR
              const mergedPR = prs.data.find(pr => pr.merged_at !== null);
              if (mergedPR) {
                core.setOutput('pr_number', mergedPR.number);
                core.setOutput('pr_title', mergedPR.title);
                core.setOutput('pr_url', mergedPR.html_url);
                console.log(`Found latest merged PR: #${mergedPR.number} - ${mergedPR.title}`);
                return;
              }
            }

            // No merged PR found
            core.setOutput('pr_number', '');
            core.setOutput('pr_title', '');
            core.setOutput('pr_url', '');
            console.log('No merged PR found');

      - name: Create resource pack
        id: pack
        run: |
          # リソースパックをzip化
          zip -r OfroPack.zip assets/ pack.mcmeta pack.png

          # SHA256ハッシュ計算
          SHA1=$(sha1sum OfroPack.zip | awk '{print $1}')
          echo "sha1=$SHA1" >> $GITHUB_OUTPUT

          # ファイルサイズ取得
          SIZE=$(stat -f%z OfroPack.zip 2>/dev/null || stat -c%s OfroPack.zip)
          echo "size=$SIZE" >> $GITHUB_OUTPUT

          echo "Resource pack created: $SIZE bytes, SHA1: $SHA1"

      - name: Create public directory
        run: |
          mkdir -p public
          mv OfroPack.zip public/

          # hash.txt作成
          echo "${{ steps.pack.outputs.sha1 }}" > public/hash.txt

          # メタデータJSON作成
          cat > public/metadata.json << EOF
          {
            "version": "$(date +%Y%m%d-%H%M%S)",
            "sha1": "${{ steps.pack.outputs.sha1 }}",
            "size": ${{ steps.pack.outputs.size }},
            "commit": "${{ github.sha }}",
            "updated_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "download_url": "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/OfroPack.zip",
            "latest_pr": {
              "number": "${{ steps.latest_pr.outputs.pr_number }}",
              "title": "${{ steps.latest_pr.outputs.pr_title }}",
              "url": "${{ steps.latest_pr.outputs.pr_url }}"
            }
          }
          EOF

          cp index.html public/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Summary
        run: |
          echo "## 🎉 デプロイ完了!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**リソースパック URL:**" >> $GITHUB_STEP_SUMMARY
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/OfroPack.zip" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**ハッシュ URL:**" >> $GITHUB_STEP_SUMMARY
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/hash.txt" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**SHA1:** \`${{ steps.pack.outputs.sha1 }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**サイズ:** $((${{ steps.pack.outputs.size }} / 1024)) KB" >> $GITHUB_STEP_SUMMARY
