name: Add Custom Model from Issue

on:
  issues:
    types: [opened]

env:
  # Common variables
  ISSUE_NUMBER: ${{ github.event.issue.number }}
  REPO_OWNER: ${{ github.repository_owner }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  parse-and-add:
    if: contains(github.event.issue.labels.*.name, 'custom-model')
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
      issues: write

    env:
      # Job-specific variables
      PR_BRANCH: custom-model/issue-${{ github.event.issue.number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build processor tool
        run: cargo build --release

      - name: Parse issue body
        id: parse
        run: |
          set -euo pipefail
          
          # Read issue body from GitHub context
          ISSUE_BODY=$(cat << 'ISSUE_EOF'
          ${{ github.event.issue.body }}
          ISSUE_EOF
          )
          
          # Parse using Rust CLI
          OUTPUT=$(./target/release/processor runner parse-issue --body "$ISSUE_BODY")
          
          if [ $? -ne 0 ]; then
            echo "::error::Failed to parse issue body"
            exit 1
          fi
          
          # Set outputs for GitHub Actions
          echo "$OUTPUT" >> $GITHUB_OUTPUT
          
          echo "‚úì Issue parsed successfully"

      - name: Add rocket reaction
        run: |
          ./target/release/processor runner react \
            --issue-number ${{ env.ISSUE_NUMBER }} \
            --reaction rocket

      - name: Download and validate image
        run: |
          set -euo pipefail
          IMAGE_URL="${{ steps.parse.outputs.image_url }}"
          IMAGE_FILE="${{ steps.parse.outputs.custom_model_data }}.png"

          echo "Downloading image from: $IMAGE_URL"
          HTTP_CODE=$(curl -sSL -w "%{http_code}" -o "$IMAGE_FILE" "$IMAGE_URL")

          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "::error::Failed to download image (HTTP $HTTP_CODE)"
            rm -f "$IMAGE_FILE"
            exit 1
          fi

          if ! file "$IMAGE_FILE" | grep -q "PNG image"; then
            echo "::error::Downloaded file is not a valid PNG image"
            head -5 "$IMAGE_FILE" || true
            rm -f "$IMAGE_FILE"
            exit 1
          fi

          echo "‚úì Image downloaded and validated"
          echo "IMAGE_FILE=$IMAGE_FILE" >> $GITHUB_ENV

      - name: Build processor tool
        run: |
          echo "Building Rust processor..."
          cargo build --release
          echo "‚úì Build complete"

      - name: Process custom model data
        run: |
          set -euo pipefail

          # Build arguments for materials
          ARGS=""
          IFS=',' read -ra MATERIALS <<< "${{ steps.parse.outputs.materials }}"
          for material in "${MATERIALS[@]}"; do
            material=$(echo "$material" | xargs)  # trim whitespace
            ARGS="$ARGS -m $material"
          done

          # Run the processor with 'add' subcommand
          echo "Running processor: add $ARGS -c ${{ steps.parse.outputs.custom_model_data }} $IMAGE_FILE"
          ./target/release/processor add $ARGS -c "${{ steps.parse.outputs.custom_model_data }}" "$IMAGE_FILE"
          echo "‚úì Custom model data processed"

      - name: Generate preview image
        run: |
          set -euo pipefail

          MODEL_NAME="${{ steps.parse.outputs.custom_model_data }}"
          SRC="assets/minecraft/textures/item/${MODEL_NAME}.png"

          if [ ! -f "$SRC" ]; then
            echo "::error::Source texture not found: $SRC"
            exit 1
          fi

          # Generate preview using Rust CLI
          PREVIEW_OUTPUT=$(./target/release/processor runner generate-preview \
            --source "$SRC" \
            --model-name "$MODEL_NAME" \
            --preview-dir "preview" \
            --repo-owner "${{ github.repository_owner }}" \
            --repo-name "${{ github.event.repository.name }}" \
            --branch "${{ env.PR_BRANCH }}")
          
          # Extract preview URL from output
          PREVIEW_URL=$(echo "$PREVIEW_OUTPUT" | grep "preview_url=" | cut -d= -f2)
          
          echo "‚úì Preview generated"
          echo "Preview URL: $PREVIEW_URL"
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add custom model: ${{ steps.parse.outputs.custom_model_data }} (#${{ env.ISSUE_NUMBER }})"
          title: "‚ú® Add custom model: ${{ steps.parse.outputs.custom_model_data }}"
          body: |
            ## üé® Custom Model Data Addition

            Resolves #${{ env.ISSUE_NUMBER }}

            ### Details

            - **Materials**: `${{ steps.parse.outputs.materials }}`
            - **Custom Model Data**: `${{ steps.parse.outputs.custom_model_data }}`
            - **Source Image**: ${{ steps.parse.outputs.image_url }}

            ### Preview (256√ó256, pixel-perfect)

            ![Custom Model Preview](${{ env.PREVIEW_URL }})

            ---

            *This PR was automatically generated by GitHub Actions.*
          branch: ${{ env.PR_BRANCH }}
          delete-branch: true
          committer: GitHub Actions Bot <actions@github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>

      - name: Comment success on issue
        if: steps.create_pr.outputs.pull-request-number
        run: |
          PR_NUMBER="${{ steps.create_pr.outputs.pull-request-number }}"
          PREVIEW_URL="${{ env.PREVIEW_URL }}"
          
          ./target/release/processor runner comment \
            --issue-number ${{ env.ISSUE_NUMBER }} \
            --body "## ‚úÖ Custom model processed successfully!

          **Pull Request:** #${PR_NUMBER}

          ### Preview (256√ó256, pixel-perfect)

          ![Custom Model Preview](${PREVIEW_URL})

          Please review and merge the PR to add this custom model to the resource pack."
          
          ./target/release/processor runner react \
            --issue-number ${{ env.ISSUE_NUMBER }} \
            --reaction "+1"

      - name: Comment failure on issue
        if: failure()
        run: |
          ./target/release/processor runner comment \
            --issue-number ${{ env.ISSUE_NUMBER }} \
            --body "## ‚ùå Failed to process custom model

          The workflow encountered an error. Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.

          ### Next steps

          1. Review the error in the logs
          2. Fix any issues with the provided information
          3. **Create a new issue** with the correct details

          ‚ö†Ô∏è **Note:** Do not edit this issue. Editing does not re-trigger the workflow."
          
          ./target/release/processor runner react \
            --issue-number ${{ env.ISSUE_NUMBER }} \
            --reaction "-1"
          
          ./target/release/processor runner close-issue \
            --issue-number ${{ env.ISSUE_NUMBER }}
