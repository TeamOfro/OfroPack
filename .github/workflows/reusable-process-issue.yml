name: 🔄 Issue処理（共通ワークフロー）

on:
  workflow_call:
    inputs:
      issue-type:
        description: '処理タイプ（model: 2Dモデル追加, model3d: 3Dモデル追加, extend: マテリアル拡張）'
        required: true
        type: string
      issue-body:
        description: 'Issue本文（パース用）'
        required: true
        type: string
      issue-number:
        description: 'Issue番号'
        required: true
        type: string
      actor:
        description: 'Issue作成者のユーザー名'
        required: true
        type: string
      actor-id:
        description: 'Issue作成者のユーザーID'
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  process:
    name: 🎨 カスタムモデルを処理
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: 📥 リポジトリをチェックアウト
        uses: actions/checkout@v5

      - name: 🦀 Rustをセットアップ
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: 🔨 CLIツールをビルド
        run: cargo build --release

      - name: ⚙️  Issueを処理（モデル生成、PR作成、コメント投稿）
        id: process
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          PR_BRANCH: ${{ inputs.issue-type }}/issue-${{ inputs.issue-number }}
        run: |
          # Issue本文を環境変数として読み込み
          ISSUE_BODY=$(cat << 'ISSUE_EOF'
          ${{ inputs.issue-body }}
          ISSUE_EOF
          )

          # CLIツールでIssueを処理（画像ダウンロード、バリデーション、モデル生成、PR作成、成功コメント投稿）
          OUTPUT=$(./target/release/processor runner process-issue \
            --issue-type ${{ inputs.issue-type }} \
            --issue-number ${{ inputs.issue-number }} \
            --body "$ISSUE_BODY" \
            --actor "${{ inputs.actor }}" \
            --actor-email "${{ inputs.actor-id }}+${{ inputs.actor }}@users.noreply.github.com" 2>&1)

          EXIT_CODE=$?

          # エラー時はエラーメッセージを保存して終了
          if [ $EXIT_CODE -ne 0 ]; then
            echo "error_message=$(echo "$OUTPUT" | tail -n +1)" >> $GITHUB_OUTPUT
            exit $EXIT_CODE
          fi

      - name: ❌ Issueにエラーコメントを投稿
        if: failure() && steps.process.conclusion == 'failure'
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
          ERROR_MSG="${{ steps.process.outputs.error_message }}"
          if [ -z "$ERROR_MSG" ]; then
            ERROR_MSG="処理中に予期しないエラーが発生しました。ワークフローログを確認してください。"
          fi

          WORKFLOW_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          ./target/release/processor runner post-failure \
            --issue-number ${{ inputs.issue-number }} \
            --error-message "$ERROR_MSG" \
            --workflow-url "$WORKFLOW_URL"
